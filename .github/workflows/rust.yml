name: ⚡ Arcane Rust Rituals

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Define mystical permissions for the digital realm
permissions:
  actions: read
  contents: read
  security-events: write
  pull-requests: write

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  ROCKSDB_LIB_DIR: /usr/lib/x86_64-linux-gnu
  ROCKSDB_STATIC: 1
  RUSTFLAGS: "-C target-cpu=native"

jobs:
  summoning:
    name: 🕯️ Summon and Test the Digital Essence
    runs-on: ubuntu-latest

    steps:
    - name: 🌒 Channel the Repository
      uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608

    - name: ⚔️ Install Mystical Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y librocksdb-dev clang

    - name: ⛧ Invoke Rust
      uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5c
      with:
        components: clippy, rustfmt

    - name: 🐍 Summon Python
      uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236
      with:
        python-version: '3.9'

    - name: 📓 Cache Ancient Knowledge
      uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: 🔍 Verify Sacred Format
      run: cargo fmt -- --check

    - name: 🕯️ Invoke Clippy's Wisdom
      run: cargo clippy -- -D warnings

    - name: ⚡ Forge the Artifacts
      run: cargo build --verbose

    - name: 🗝️ Perform the Test Rituals
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
        ./tests/run_local_tests.sh 